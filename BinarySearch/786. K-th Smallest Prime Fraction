class Solution {
public:
    vector<int> kthSmallestPrimeFraction(vector<int>& arr, int k) {
        int n = arr.size();
        double low = 0.0, high = 1.0;
        while (low<high) {
            double mid = (low + high) / 2.0;
            double maxfraction = 0.0;
            int num = 0,den = 0, cnt = 0, j = 1;
            for (int i = 0; i < n - 1; i++) {
                while (j < n && arr[i] > arr[j] * mid) j++;
                cnt += (n - j);
                if (j == n) break;

                double fraction = (double)(arr[i])/arr[j];
                if(fraction>maxfraction){
                    num = i, den = j, maxfraction = fraction;
                }
            }

            if (cnt == k) return {arr[num], arr[den]};
            else if (cnt < k) low = mid;
            else high = mid;
        }
        return {};
    }
};
