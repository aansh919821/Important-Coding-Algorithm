class Solution {
public:
    vector<int> loudAndRich(vector<vector<int>>& r, vector<int>& q) {
        int n = q.size();
        vector<vector<int>>adj(n);
        queue<pair<int,int>>pq;
        vector<int>in(n);
        for(int i = 0;i<r.size();i++){
            int u = r[i][1];
            int v = r[i][0];
            adj[v].push_back(u);
            in[u]++;
        }
        vector<int>mini(n);
        for(int i = 0;i<n;i++){
            if(in[i] == 0){
                pq.push({i,i});
            }
            mini[i] = i;
        }
        vector<int>ans(n);
        while(!pq.empty()){
            int ind = pq.front().first;
            int minind = pq.front().second;
            pq.pop();
            ans[ind] = minind;
            for(auto it:adj[ind]){
                in[it]--;
                if(q[mini[it]]>q[mini[ind]]) mini[it] = mini[ind];
                if(in[it] == 0) {
                    pq.push({it,mini[it]});
                }
            }
        }
        return ans;
        
    }
};
